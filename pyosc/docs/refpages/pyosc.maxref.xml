<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="pyosc" kind="patcher" category="IO, Python, OSC">

	<digest>
		Call python functions over OSC
	</digest>

	<description>
        Calls a python function with the corresponding name. Assumes that the python function is in a class inheriting from MaxOsc
		and that the python script is running on the corresponding port/ip.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">jb</metadata>
		<metadata name="tag">osc</metadata>
		<metadata name="tag">python</metadata>
		<metadata name="tag">py</metadata>
	</metadatalist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="function_name" optional="0" type="symbol">
			<digest>
				Function name
			</digest>
			<description>
				Name of python function to call. This has to be identical to how the function is named in the python code.
			</description>
		</objarg>
        <objarg name="send_port" optional="1" type="int">
			<digest>
				OSC send port
			</digest>
			<description>
				Destination network port for the python server (default: 8081).
			</description>
        </objarg>
        <objarg name="receive_port" optional="1" type="int">
			<digest>
				OSC receive port
			</digest>
			<description>
				Port on which messages will be received from python server (default: 8080).
			</description>
		</objarg>
	</objarglist>

    <!--ATTRIBUTES-->
	<attributelist>
		<attribute name="return" get="1" set="1" type="symbol" size="1">
			<digest>
				Return address (default: (autogenerated))
			</digest>
			<description>
				The OSC address on which any python messages will be returned.
				If this value is unset, a default unique address will be generated. 
				This address will be appended to the function call as the first argument.
                If this value is set, the function call will not be modified and only calls
				corresponding to the set address will be received.
			</description>
		</attribute>
		<attribute name="ip" get="1" set="1" type="symbol" size="1">
			<digest>
				Destination host ip (default: localhost)
			</digest>
			<description>
				Destination ip of the python server.
			</description>
		</attribute>
		<attribute name="return_llll" get="1" set="1" type="int" size="1">
			<digest>
				Returns formatted as bach.llll (default: 1)
			</digest>
			<description>
				Flag informing the pyosc object that the content returned from python will be formatted
				as a bach.llll. This flag is enabled by default and is strongly recommended, assuming that
				the data is sent from python with MaxOsc.send_llll(). <br /> <br /> This is compatible with most common 
				return values (int, float, bool, bang, python unpacked lists/max lists) even without the 
				bach library installed. If the user wants to send by calling MaxOsc.send_raw(), this flag
				should be set to 0. See helpfiles for more info.
			</description>
		</attribute>
	</attributelist>


	<!--MESSAGES-->
		<methodlist>
			<method name="bang">
				<arglist />
				<digest>
					Call function without arguments
				</digest>
				<description>
					Calls the given python function without any arguments <br /> 
					(Note: will append return address unless manually set).
				</description>
			</method>
			<method name="sendport">
				<arglist />
				<digest>
					Set send port
				</digest>
			</method>
			<method name="recvport">
				<arglist />
				<digest>
					Set receive port
				</digest>
			</method>
			<method name="ip">
				<arglist />
				<digest>
					Set destination host ip
				</digest>
			</method>
		</methodlist>

</c74object>